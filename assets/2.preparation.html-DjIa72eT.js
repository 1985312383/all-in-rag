import{_ as e,a as s,b as a,c as t,d as n,e as l,f as r,g as o,h,i as d,j as c,k as p,l as g,m as k}from"./1_2_14-oc73JHdt.js";import{_ as u,c as m,a as b,o as v}from"./app-CFXp0Idr.js";const f={};function y(A,i){return v(),m("div",null,[...i[0]||(i[0]=[b('<blockquote><p>This section primarily recommends two browser-based integrated development environments for environment configuration. Whether you&#39;re using a phone, tablet, or computer, you can log in and run code anytime. Although the experience on phones and tablets might not be ideal, they are still usable.</p></blockquote><h2 id="_1-deepseek-api-configuration-you-can-also-choose-other-llm-apis" tabindex="-1"><a class="header-anchor" href="#_1-deepseek-api-configuration-you-can-also-choose-other-llm-apis"><span>1. Deepseek API Configuration (You can also choose other LLM APIs)</span></a></h2><h3 id="_1-1-api-application" tabindex="-1"><a class="header-anchor" href="#_1-1-api-application"><span>1.1 API Application</span></a></h3><p>To use the large language model services provided by Deepseek, you first need an API Key. Here are the application steps:</p><ol><li><p><strong>Visit Deepseek Open Platform</strong> Open your browser and visit <a href="https://platform.deepseek.com/" target="_blank" rel="noopener noreferrer">Deepseek Open Platform</a>.</p><figure><img src="'+e+'" alt="Deepseek Platform Homepage" tabindex="0" loading="lazy"><figcaption>Deepseek Platform Homepage</figcaption></figure></li><li><p><strong>Login or Register Account</strong> If you already have an account, please log in directly. If not, click the register button on the page and complete registration using your email or phone number.</p></li><li><p><strong>Create New API Key</strong> After successful login, find and click <code>API Keys</code> in the left navigation bar. On the API management page, click the <code>Create API key</code> button. Enter a name that doesn&#39;t duplicate other API keys and click create.</p><figure><img src="'+s+'" alt="Create New Key Button" tabindex="0" loading="lazy"><figcaption>Create New Key Button</figcaption></figure></li><li><p><strong>Save API Key</strong> The system will generate a new API key for you. Please <strong>copy immediately</strong> and save it in a secure place.</p><blockquote><p>Note: For security reasons, this key will only be displayed in full once. You won&#39;t be able to see it again after closing the popup.</p></blockquote><figure><img src="'+a+'" alt="Copy and Save Key" tabindex="0" loading="lazy"><figcaption>Copy and Save Key</figcaption></figure></li></ol><h2 id="_2-github-codespaces-environment-configuration-recommended" tabindex="-1"><a class="header-anchor" href="#_2-github-codespaces-environment-configuration-recommended"><span>2. GitHub Codespaces Environment Configuration (Recommended)</span></a></h2><blockquote><p>First, ensure you have a network environment that can smoothly access GitHub. If you cannot access it smoothly, please use Cloud Studio below.</p></blockquote><p>GitHub Codespaces is a service provided by GitHub that allows developers to create, edit, and run code in the cloud. It provides a pre-configured development environment including code editor, terminal, debugging tools, etc., which can be used directly in the browser.</p><h3 id="_2-1-creating-codespaces" tabindex="-1"><a class="header-anchor" href="#_2-1-creating-codespaces"><span>2.1 Creating Codespaces</span></a></h3><ol><li><p><strong>Visit Project Address</strong></p><p>Open your browser and visit <a href="https://github.com/datawhalechina/all-in-rag" target="_blank" rel="noopener noreferrer">all-in-rag</a></p></li><li><p><strong>Create New Fork</strong> In the upper right corner of the project page, click the <code>Fork</code> button to create a new fork. Wait a moment for successful creation.</p><figure><img src="'+t+'" alt="Create New Fork 1" tabindex="0" loading="lazy"><figcaption>Create New Fork 1</figcaption></figure><figure><img src="'+n+'" alt="Create New Fork 2" tabindex="0" loading="lazy"><figcaption>Create New Fork 2</figcaption></figure></li><li><p><strong>Create Codespaces</strong> In the upper right corner of the project page, click the <code>Code</code> button, then select the <code>Codespaces</code> tab. Click the <code>New codespace</code> button and wait for the new Codespaces environment to be created successfully.</p><figure><img src="'+l+'" alt="Create Codespaces" tabindex="0" loading="lazy"><figcaption>Create Codespaces</figcaption></figure></li><li><p><strong>Re-enter Codespaces</strong> After closing the webpage, find the newly created repository and click the content in the red box to re-enter the codespace environment.</p><figure><img src="'+r+'" alt="Re-enter Codespaces" tabindex="0" loading="lazy"><figcaption>Re-enter Codespaces</figcaption></figure></li><li><p><strong>Quota Settings</strong> Find the codespace settings in GitHub&#39;s account settings. It&#39;s recommended to adjust the suspend time according to your situation (too long will waste quota, free accounts provide 120 hours of single-core quota).</p><figure><img src="'+o+'" alt="Quota Settings" tabindex="0" loading="lazy"><figcaption>Quota Settings</figcaption></figure></li></ol><h3 id="_2-2-python-environment-configuration" tabindex="-1"><a class="header-anchor" href="#_2-2-python-environment-configuration"><span>2.2 Python Environment Configuration</span></a></h3><p>After entering the IDE, first select the terminal below.</p><figure><img src="'+h+`" alt="Enter Terminal" tabindex="0" loading="lazy"><figcaption>Enter Terminal</figcaption></figure><ol><li><p><strong>Update System Packages</strong></p><p>Enter the following command in the terminal:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> upgrade</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Install Miniconda</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -O</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/miniconda.sh</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/miniconda.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Press Enter to read the license agreement</li><li>Enter <code>yes</code> to agree to the agreement</li><li>Press Enter directly when prompted for installation path (use default path /home/ubuntu/miniconda3)</li><li>Whether to initialize Miniconda: Enter <code>yes</code> to add Miniconda to your PATH environment variable.</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>If the version number is displayed, the installation is successful.</p></li></ol><h3 id="_2-3-api-configuration" tabindex="-1"><a class="header-anchor" href="#_2-3-api-configuration"><span>2.3 API Configuration</span></a></h3><ol><li><p>Use the <code>vim</code> editor to open your shell configuration file.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">vim</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Enter <code>i</code> to enter edit mode, add the following line at the end of the file, replacing <code>[Your Deepseek API Key]</code> with your own key:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">export</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> DEEPSEEK_API_KEY</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Your Deepseek API Key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Save and exit. In vim, press Esc to enter command mode, then type <code>:wq</code> and press Enter to save the file and exit.</p></li><li><p>Make configuration effective. Execute the following command to immediately load the updated configuration and make the environment variable effective:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="_2-4-create-and-activate-virtual-environment" tabindex="-1"><a class="header-anchor" href="#_2-4-create-and-activate-virtual-environment"><span>2.4 Create and Activate Virtual Environment</span></a></h3><ol><li><p><strong>Create Virtual Environment</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> all-in-rag</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.12.7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Press Enter directly when options appear.</p></li><li><p><strong>Activate Virtual Environment</strong></p><p>Use the following command to activate the virtual environment:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> activate</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> all-in-rag</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>Dependency Installation</strong> If you strictly follow the above process, you should currently be in the project root directory. Enter the code directory to install dependency libraries.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> code</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>If there are version errors about grpcio, you can ignore them.</p></blockquote></li></ol><h2 id="_3-cloud-studio-environment-configuration-recommended-for-domestic-environment" tabindex="-1"><a class="header-anchor" href="#_3-cloud-studio-environment-configuration-recommended-for-domestic-environment"><span>3. Cloud Studio Environment Configuration (Recommended for Domestic Environment)</span></a></h2><p>Cloud Studio is a browser-based integrated development environment (IDE) launched by Tencent Cloud. It supports access to both CPU and GPU.</p><blockquote><p>I heard there&#39;s a free quota of 50 hours per month 🤔</p></blockquote><h3 id="_3-1-application-creation" tabindex="-1"><a class="header-anchor" href="#_3-1-application-creation"><span>3.1 Application Creation</span></a></h3><ol><li><p><strong>Visit Cloud Studio</strong> Open your browser and visit <a href="https://cloudstudio.net/" target="_blank" rel="noopener noreferrer">Cloud Studio</a>.</p></li><li><p><strong>Login or Register Account</strong> Click the <code>Register/Login</code> button in the upper right corner of the page and complete login using WeChat or other methods.</p></li><li><p><strong>Create Application</strong> Find and click <code>Create Application</code> in the navigation bar at the top of the page. Select <code>Import from Git Repository</code>, enter <code>https://github.com/datawhalechina/all-in-rag.git</code> in the project address bar and press Enter. It will automatically create a title and description for you.</p><figure><img src="`+d+'" alt="Create Application" tabindex="0" loading="lazy"><figcaption>Create Application</figcaption></figure></li><li><p><strong>Re-enter</strong> Later, find the previously created application on the <a href="https://cloudstudio.net/my-app" target="_blank" rel="noopener noreferrer">Application Management Page</a>, click on it and select &quot;Write Code&quot; in the upper right corner to re-enter.</p><figure><img src="'+c+'" alt="Re-enter Application" tabindex="0" loading="lazy"><figcaption>Re-enter Application</figcaption></figure></li></ol><h3 id="_3-2-python-environment-configuration" tabindex="-1"><a class="header-anchor" href="#_3-2-python-environment-configuration"><span>3.2 Python Environment Configuration</span></a></h3><p>After entering the IDE, first select the terminal on the right.</p><figure><img src="'+p+`" alt="Enter Terminal" tabindex="0" loading="lazy"><figcaption>Enter Terminal</figcaption></figure><ol><li><p><strong>Update System Packages</strong></p><p>Enter the following command in the terminal:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> upgrade</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Switch to Regular User</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">su</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ubuntu</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>Install Miniconda</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -O</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/miniconda.sh</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/miniconda.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Press Enter to read the license agreement</li><li>Enter <code>yes</code> to agree to the agreement</li><li>Press Enter directly when prompted for installation path (use default path /home/ubuntu/miniconda3)</li><li>Whether to initialize Miniconda: Enter <code>yes</code> to add Miniconda to your PATH environment variable.</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>If the version number is displayed, the installation is successful.</p></li></ol><h3 id="_3-3-api-configuration" tabindex="-1"><a class="header-anchor" href="#_3-3-api-configuration"><span>3.3 API Configuration</span></a></h3><ol><li><p>Use the <code>vim</code> editor to open your shell configuration file.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">vim</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Enter <code>i</code> to enter edit mode, add the following line at the end of the file, replacing <code>[Your Deepseek API Key]</code> with your own key:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">export</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> DEEPSEEK_API_KEY</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Your Deepseek API Key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Save and exit. In vim, press Esc to enter command mode, then type <code>:wq</code> and press Enter to save the file and exit.</p></li><li><p>Make configuration effective. Execute the following command to immediately load the updated configuration and make the environment variable effective:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="_3-4-create-and-activate-virtual-environment" tabindex="-1"><a class="header-anchor" href="#_3-4-create-and-activate-virtual-environment"><span>3.4 Create and Activate Virtual Environment</span></a></h3><ol><li><p><strong>Create Virtual Environment</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> all-in-rag</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.12.7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Press Enter directly when options appear.</p></li><li><p><strong>Configure File Permissions</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> chown</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -R</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ubuntu:ubuntu</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> code</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> models</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>Activate Virtual Environment</strong></p><p>Use the following command to activate the virtual environment:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> activate</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> all-in-rag</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>Dependency Installation</strong> If you strictly follow the above process, you should currently be in the project root directory. Enter the code directory to install dependency libraries.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> code</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>If there are version errors about grpcio, you can ignore them.</p></blockquote></li></ol><h2 id="_4-windows-environment-configuration-skip-this-step-if-using-cloud-studio-or-codespaces" tabindex="-1"><a class="header-anchor" href="#_4-windows-environment-configuration-skip-this-step-if-using-cloud-studio-or-codespaces"><span>4. Windows Environment Configuration (Skip this step if using Cloud Studio or Codespaces)</span></a></h2><h3 id="_4-1-api-configuration" tabindex="-1"><a class="header-anchor" href="#_4-1-api-configuration"><span>4.1 API Configuration</span></a></h3><ol><li><p>Right-click &quot;Computer&quot; or &quot;This PC&quot;, then click &quot;Properties&quot;.</p></li><li><p>In the left menu, click &quot;Advanced system settings&quot;.</p></li><li><p>In the &quot;System Properties&quot; dialog box, click the &quot;Advanced&quot; tab, then click the &quot;Environment Variables&quot; button below.</p><figure><img src="`+g+'" alt="Advanced System Settings" tabindex="0" loading="lazy"><figcaption>Advanced System Settings</figcaption></figure></li><li><p>In the &quot;Environment Variables&quot; dialog box, click &quot;New&quot; (under the &quot;User variables&quot; section), then enter the following information:</p><ul><li>Variable name: DEEPSEEK_API_KEY</li><li>Variable value: [Your Deepseek API Key]</li></ul><figure><img src="'+k+`" alt="Advanced System Settings" tabindex="0" loading="lazy"><figcaption>Advanced System Settings</figcaption></figure></li></ol><h3 id="_4-2-install-miniconda" tabindex="-1"><a class="header-anchor" href="#_4-2-install-miniconda"><span>4.2 Install Miniconda</span></a></h3><ol><li><p><strong>Download Installer</strong></p><p>It&#39;s recommended to visit <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/" target="_blank" rel="noopener noreferrer">Tsinghua University Open Source Software Mirror</a> for faster download speeds. Choose the latest <code>Windows-x86_64.exe</code> version according to your system.</p><p>You can also download from the <a href="https://docs.conda.io/en/latest/miniconda.html" target="_blank" rel="noopener noreferrer">Miniconda Official Website</a>.</p></li><li><p><strong>Run Installation Wizard</strong></p><p>After downloading, double-click the <code>.exe</code> file to start installation. Follow the wizard prompts:</p><ul><li><strong>Welcome</strong>: Click <code>Next</code>. </li><li><strong>License Agreement</strong>: Click <code>I Agree</code>. </li><li><strong>Installation Type</strong>: Select <code>Just Me</code>, click <code>Next</code>. </li><li><strong>Choose Install Location</strong>: It&#39;s recommended to keep the default path, or choose a path without Chinese characters and spaces. Click <code>Next</code>. </li><li><strong>Advanced Installation Options</strong>: <strong>Do not check</strong> &quot;Add Miniconda3 to my PATH environment variable&quot;. We will manually configure environment variables later. Click <code>Install</code>. </li><li><strong>Installation Complete</strong>: After installation is complete, click <code>Next</code>, then uncheck &quot;Learn more&quot; and click <code>Finish</code> to complete installation. </li></ul></li><li><p><strong>Manually Configure Environment Variables</strong></p><p>To use the <code>conda</code> command in any terminal window, you need to manually configure environment variables.</p><ul><li>Search for &quot;Edit the system environment variables&quot; in the Windows search bar and open it. </li><li>In the &quot;System Properties&quot; window, click &quot;Environment Variables&quot;. </li><li>In the &quot;Environment Variables&quot; window, find the <code>Path</code> variable under &quot;System variables&quot;, select it and click &quot;Edit&quot;. </li><li>In the &quot;Edit Environment Variable&quot; window, create three new paths pointing to the corresponding folders under your Miniconda installation directory. If your installation path is <code>D:\\Miniconda3</code>, you need to add:<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>D:\\Miniconda3</span></span>
<span class="line"><span>D:\\Miniconda3\\Scripts</span></span>
<span class="line"><span>D:\\Miniconda3\\Library\\bin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>After completion, click &quot;OK&quot; all the way to save changes.</li></ul></li></ol><h3 id="_4-3-configure-conda-mirror-sources" tabindex="-1"><a class="header-anchor" href="#_4-3-configure-conda-mirror-sources"><span>4.3 Configure Conda Mirror Sources</span></a></h3><p>To speed up subsequent package installations using <code>conda</code>, it&#39;s strongly recommended to configure domestic mirror sources. Open a new terminal or Anaconda Prompt and run the following commands:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channels</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channels</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --set</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> show_channel_urls</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> yes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After configuration, you can view the added sources using the <code>conda config --show channels</code> command.</p><h2 id="_5-project-code-pulling-skip-this-step-if-using-cloud-studio-or-codespaces" tabindex="-1"><a class="header-anchor" href="#_5-project-code-pulling-skip-this-step-if-using-cloud-studio-or-codespaces"><span>5. Project Code Pulling (Skip this step if using Cloud Studio or Codespaces)</span></a></h2><h3 id="_5-1-install-git" tabindex="-1"><a class="header-anchor" href="#_5-1-install-git"><span>5.1 Install Git</span></a></h3><p>If you haven&#39;t installed Git yet, please follow these steps to install it.</p><ul><li><p><strong>Windows System</strong>: Visit the <a href="https://git-scm.com/download/win" target="_blank" rel="noopener noreferrer">Git Official Website</a>, download and run the installer, complete installation with default settings.</p></li><li><p><strong>macOS System</strong>: Open terminal and enter the following command to install Git:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">brew</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>Linux System (Ubuntu example)</strong>: Open terminal and enter the following commands to install Git:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>After installation, verify that Git is installed successfully by entering the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If successful, it will display Git&#39;s version number.</p><h3 id="_5-2-clone-project-code" tabindex="-1"><a class="header-anchor" href="#_5-2-clone-project-code"><span>5.2 Clone Project Code</span></a></h3><ol><li><p><strong>Choose Directory for Project</strong> Open terminal (or Git Bash in Windows), navigate to the directory where you want to store the project:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [path </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">where</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> you</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> want</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> to</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> store</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> the</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> project]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>Clone Repository</strong> Use the following command to pull the <code>all-in-rag</code> repository:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://github.com/datawhalechina/all-in-rag.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Wait for the download to complete. The project code will be stored in the <code>all-in-rag</code> folder in the current directory.</p></li><li><p><strong>Enter Project Directory</strong> After pulling the code, enter the project directory:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> all-in-rag</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="_5-3-create-and-activate-virtual-environment" tabindex="-1"><a class="header-anchor" href="#_5-3-create-and-activate-virtual-environment"><span>5.3 Create and Activate Virtual Environment</span></a></h3><p>In the project directory, it&#39;s recommended to use the previously configured Miniconda to create a Python virtual environment.</p><ol><li><p><strong>Create Virtual Environment</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> all-in-rag</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.12.7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>Activate Virtual Environment</strong></p><p>All systems use the following command to activate the virtual environment:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> activate</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> all-in-rag</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>Dependency Installation</strong> If you strictly follow the above process, you should currently be in the project root directory. Enter the code directory to install dependency libraries.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> code</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,52)])])}const w=u(f,[["render",y]]),D=JSON.parse('{"path":"/en/chapter1/2.preparation.html","title":"Chapter 2: Preparation","lang":"en-US","frontmatter":{"createTime":"2025/09/29 15:04:14","title":"Chapter 2: Preparation"},"readingTime":{"minutes":6.72,"words":2017},"git":{"createdTime":1753284587000,"updatedTime":1759130705000,"contributors":[{"name":"FutureUnreal","username":"FutureUnreal","email":"42101210307@stu.xpu.edu.cn","commits":3,"avatar":"https://avatars.githubusercontent.com/FutureUnreal?v=4","url":"https://github.com/FutureUnreal"},{"name":"1985312383","username":"1985312383","email":"56398475+1985312383@users.noreply.github.com","commits":2,"avatar":"https://avatars.githubusercontent.com/1985312383?v=4","url":"https://github.com/1985312383"}]},"filePathRelative":"en/chapter1/2.preparation.md","headers":[]}');export{w as comp,D as data};
